# Nginx Configuration for FrozenFoodBot Production
# Domain: domashniystandart.com
#
# ИНСТРУКЦИЯ ПО УСТАНОВКЕ:
# 1. Скопировать этот файл на сервер как /etc/nginx/sites-available/frozenbot
# 2. Создать symlink: ln -s /etc/nginx/sites-available/frozenbot /etc/nginx/sites-enabled/
# 3. Проверить конфигурацию: nginx -t
# 4. Перезагрузить nginx: systemctl reload nginx

# HTTP redirect to HTTPS
server {
    listen 80;
    server_name domashniystandart.com www.domashniystandart.com;
    return 301 https://$server_name$request_uri;
}

# HTTPS Configuration
server {
    listen 443 ssl http2;
    server_name domashniystandart.com www.domashniystandart.com;

    # SSL Configuration (будет обновлено после установки certbot)
    ssl_certificate /etc/letsencrypt/live/domashniystandart.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/domashniystandart.com/privkey.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # API Proxy to FastAPI Backend
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }

    # Admin Panel (React)
    location /admin {
        alias /var/www/frozenbot/admin/dist;
        try_files $uri $uri/ /admin/index.html;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # WebApp (Telegram)
    location /webapp {
        alias /var/www/frozenbot/webapp/dist;
        try_files $uri $uri/ /webapp/index.html;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Root redirect to webapp
    location = / {
        return 301 /webapp;
    }

    # Health check
    location /health {
        proxy_pass http://127.0.0.1:8000/health;
        access_log off;
    }

    # File uploads (if needed)
    client_max_body_size 10M;

    # Logs
    access_log /var/log/nginx/frozenbot_access.log;
    error_log /var/log/nginx/frozenbot_error.log;
}