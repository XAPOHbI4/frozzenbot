"""Basic bot handlers."""

from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

from app.config import settings
from app.services.user import UserService

router = Router()


@router.message(CommandStart())
async def cmd_start(message: types.Message):
    """Handle /start command."""
    user = message.from_user

    # Register or update user in database
    # TODO: Database temporarily disabled
    # user_service = UserService()
    # await user_service.create_or_update_user(
    #     telegram_id=user.id,
    #     username=user.username,
    #     first_name=user.first_name,
    #     last_name=user.last_name
    # )

    # Create main keyboard with only "–ö–∞—Ç–∞–ª–æ–≥" button (as per screenshots)
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìã –ö–∞—Ç–∞–ª–æ–≥",
                    web_app=WebAppInfo(url=f"{settings.WEBAPP_URL}")
                )
            ]
        ]
    )

    welcome_text = f"""
<b>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</b> üëã

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –≥–æ–ª—É–±—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑. –ï—Å–ª–∏ –µ—ë –Ω–µ –≤–∏–¥–Ω–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å <b>@telegram</b>

üõí <b>–î–ª—è –∑–∞–∫–∞–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ö–∞—Ç–∞–ª–æ–≥"</b>

–í –∫–∞—Ç–∞–ª–æ–≥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ:
‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ –±–ª—é–¥–∞
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ü–µ–Ω—ã
‚Ä¢ –£–¥–æ–±–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—É—é –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ Telegram

üí° <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑:</b> 1500‚ÇΩ
üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> 10-15 –º–∏–Ω
    """

    await message.answer(
        welcome_text,
        reply_markup=keyboard
    )


@router.message(Command("help"))
async def cmd_help(message: types.Message):
    """Handle /help command."""
    help_text = """
<b>üîπ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/catalog - –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

<b>–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑:</b>
1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω" –∏–ª–∏ /catalog
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
3Ô∏è‚É£ –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
4Ô∏è‚É£ –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

<b>–û–ø–ª–∞—Ç–∞:</b>
{payment_info}

<b>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑:</b> {min_order}‚ÇΩ

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """.format(
        payment_info=settings.payment_card_info,
        min_order=settings.min_order_amount
    )

    await message.answer(help_text)


@router.message(Command("catalog"))
async def cmd_catalog(message: types.Message):
    """Handle /catalog command."""

    await message.answer(
        f"üõí <b>–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</b>\n\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:\n<code>{settings.webapp_url}</code>\n\nüí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ"
    )


@router.callback_query(lambda c: c.data == "my_orders")
async def callback_my_orders(callback_query: types.CallbackQuery):
    """Handle my orders callback."""
    # TODO: Implement order history
    await callback_query.answer("–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)